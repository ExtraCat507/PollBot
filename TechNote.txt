SurveyManager - телеграм бот, предоставляющий возможности по размещению опросов и форм, голосованию и сбору статистики 
Функционал схож с сервисом гугл форм, но позволяет не выходить из телеграмма и создавать опросы легче и быстрее 

Функции, доступные пользователю:
1. Создать опрос
Бот позволит создавать опросы с открытым ответом/выбором из нескольких вариантов
Пользователь задаёт название формы и, собственно, сами вопросы
После создания, бот выдаёт идентификатор опроса, по которому другим пользователям можно будет найти и поучаствовать в нем. 

2. Участвовать в опросе 
Вбив идентификатор формы, участник сможет принять участие в опросе
Результаты сохраняются в json-файл и бд (об этом позже) 

3. Получить статистику по опросу 
Пользователь может вывести список форм, которые он создал, и поднять статистику по каждому из них 
Ответы опрошенных высылаются сообщением пользователю (все опросы анонимные)

Процесс работы:
При команде /start бот печатает приветственное сообщение, любой текст(кроме команд) введенный пользователем отправит список доступных команд
(аналогично /help)

Чтобы создать опрос надо ввести команду /create_poll, дальше пользователь выбрает тип очередного вопроса и добавляет их
"Вопрос с вариантами ответа" подразумевает отправку боту телеграмм-опроса, приложенного к сообщению

Чтобы проголосовать в опросе надо ввести /vote и следующим сообщением вставить id опроса, далее в меню нажимая на команды вида /ans{номер} можно переходить
на любой вопрос. Ответы сохраняются, их можно изменять (отвечать не на все не рекомендуется - ломаются многовариантные опросы)

Чтобы посмотреть ответы других пользователей на ваши опросы нужно ввести команду /get_statistics
Бот пришлет список всех опросов, составленных пользоваталем, открыть статистику можно вставив id опроса
Ответы на открытые вопросы представлены каждый на отдельной строчке, на многовариантные - в виде словаря




Структуры данных:
1. Бд из двух таблиц - Пользователи, Опросы
В последних двух таблицах не хранятся непосредственно вопросы/ответы, но есть ссылки на json-файлы, содержащие данную информацию 
2. Две папки с json-файлами (Для опросов: описание каждого вопроса внутри общего json'а;
Для ответов : номер вопроса + ответ пользователей на него - либо список текстовых ответов, либо словарь "вариант ответа" - "кол-во голосов")

Взаимодействие с БД через классы UserSQL и FormSQL и модуль sqlalchemy,
некоторые сложные методы(создание, сохранение опросов) реализованы через интерфейс класса Form из файла Models.py